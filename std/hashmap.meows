~( ^.x.^)>
A simple hashmap implementation for all types
in Meowscript that can be hashed.

Keys can be any type except functions!

It has O(1) addition and lookup time complexity,
and uses Meowscript's boxes underneath the
hood. As Meowscript's boxes can only have string
keys, the hash key has to be stringified.

This is fine, however, since the stringifying is
done with a built-in function and is reasonably
fast.

A hashmap can have heterogenous keys; comparisons
are neatly wrapped in a watch/catch to handle
type errors in comparisons. The watch/catch does
not muffle any other unrelated exceptions.
<(^.x.^ )~

takes "exception.meows"

=^.x.^= hashmap()

    ~( ^.x.^)>
    Local context: Define helper functions that do not
    pollute the outer environment.
    <(^.x.^ )~

    =^.x.^= add_pair(key, value)
        mew hash_key = string(hash(key))
        mew list = lookup(home.pairs, hash_key)
        home.pairs[hash_key] = list_add(list, key, value)
    meow meow

    =^.x.^= safe_comp(a, b)
        watch
            bring a == b
        catch (MeowException.InvalidOperation)
            bring sad
        meow meow
    meow meow

    =^.x.^= list_add(list, key, value)
        mew? (not list)
            list = []
        meow meow

        mew top = []
        meowmeow (list)
            mew pair = peek list
            knock over list
            mew? (safe_comp(pair.key, key))
                pair.value = value
                pair push top
                bring top..list
            meow meow
            pair push top
        meow meow

        mew new_pair = ~( ^.x.^) BOX!! [ 
            key: key,
            value: value
        ]
        bring new_pair push top
    meow meow

    =^.x.^= get_pair(key)
        mew hash_key = string(hash(key))
        mew list = lookup(home.pairs, hash_key)
        meowmeow (list)
            mew pair = peek list
            mew? (safe_comp(pair.key, key))
                bring pair.value
            meow meow
            knock over list
        meow meow
        bring lonely
    meow meow

    =^.x.^= contains_pair(key)
        mew hash_key = string(hash(key))
        mew list = lookup(home.pairs, hash_key)
        meowmeow (list)
            mew pair = peek list
            mew? (safe_comp(pair.key, key))
                bring happy
            meow meow
            knock over list
        meow meow
        bring sad
    meow meow

    bring ~( ^.x.^) BOX!! [
        pairs: ~( ^.x.^) BOX!! [],
        add: add_pair,
        get: get_pair,
        contains: contains_pair,
        clear: ( ^.x.^)> () => (home.pairs = ~( ^.x.^) BOX!! [])
    ]
meow meow
