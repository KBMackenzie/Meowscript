a = ~( ^.x.^) BOX!! [ b: ~( ^.x.^) BOX!! [ c: 3 ], method1: ( ^.x.^)> () => (~( ^.x.^) BOX!! [ method2: ( ^.x.^)> () => (meow("><")) ]) ]
meow(a["b"])
meow(a.b.c)
meow(a["b"]["c"])
meow(a.b["c"])
meow(a["b"].c)
meow(a.method1())
meow(a.method1().method2())
meow(a["method1"]().method2())
meow(a.method1()["method2"]())

watch
    int(sddsdfgdfg)
    -- The try-block below will catch this error!
catch ("InvalidVariableException")
    meow("silly...")
    int(asdfgffdg)
    -- The try-block below will catch this error too!
catch
    meow("caught it!")
meow meow

=^.x.^= dictionary()
    bring ~( ^.x.^) BOX!! [
        pairs:   ~( ^.x.^) BOX!! [],
        length:   ( ^.x.^)> () => (home.pairs?!),
        keys:     ( ^.x.^)> () => (keys(home.pairs)),
        values:   ( ^.x.^)> () => (values(home.pairs)),
        add:      ( ^.x.^)> (key, value) => (home.pairs[string(key)] = value),
        get:      ( ^.x.^)> (key) => (lookup(home.pairs, string(key))),
        contains: ( ^.x.^)> (key) => (haskey(home.pairs, string(key))),
        clear:    ( ^.x.^)> () => (home.pairs = ~( ^.x.^) BOX!! [])
    ]
meow meow
